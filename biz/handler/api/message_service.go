// Code generated by hertz generator.

package api

import (
	"context"
	"github.com/cloudwego/hertz/pkg/common/hlog"

	api "douyin/biz/model/api"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// SendMessage .
// @router /douyin/message/action/ [POST]
func SendMessage(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.DouyinMessageActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	hlog.Info(req)

	resp := new(api.DouyinMessageActionResponse)

	c.JSON(consts.StatusOK, resp)
}

// GetMessageChat .
// @router /douyin/message/chat/ [GET]
func GetMessageChat(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.DouyinMessageChatRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	hlog.Info(req)

	messages := make([]*api.Message, 0)

	var createTime int64 = 100000
	messages = append(messages, &api.Message{
		ID:         1,
		ToUserID:   1,
		FromUserID: 2,
		Content:    "duide",
		CreateTime: &createTime,
	})

	resp := &api.DouyinMessageChatResponse{
		StatusCode:  0,
		StatusMsg:   nil,
		MessageList: messages,
	}

	c.JSON(consts.StatusOK, resp)
}
