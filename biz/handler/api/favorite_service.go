// Code generated by hertz generator.

package api

import (
	"context"
	"douyin/biz/service"
	"douyin/pkg/constant"
	"errors"
	"github.com/cloudwego/hertz/pkg/common/hlog"

	api "douyin/biz/model/api"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// FavoriteVideo .
// @router /douyin/favorite/action/ [POST]
func FavoriteVideo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.DouyinFavoriteActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	hlog.Infof("%#v", req)
	userID := c.GetUint64(constant.IdentityKey)
	resp := new(api.DouyinFavoriteActionResponse)
	if req.ActionType == constant.Favorite {
		resp, err = service.FavoriteVideo(userID, uint64(req.VideoID))
	} else if req.ActionType == constant.CancelFavorite {
		resp, err = service.CancelFavoriteVideo(userID, uint64(req.VideoID))
	} else {
		err = errors.New("action type error")
	}

	if err != nil {
		c.JSON(consts.StatusOK, err)
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// GetFavoriteList .
// @router /douyin/favorite/list/ [GET]
func GetFavoriteList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.DouyinFavoriteListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	hlog.Infof("%#v", req)
	userID := c.GetUint64(constant.IdentityKey)
	resp, err := service.FavoriteList(userID, uint64(req.UserID))
	if err != nil {
		c.JSON(consts.StatusOK, err)
		return
	}

	c.JSON(consts.StatusOK, resp)
}
